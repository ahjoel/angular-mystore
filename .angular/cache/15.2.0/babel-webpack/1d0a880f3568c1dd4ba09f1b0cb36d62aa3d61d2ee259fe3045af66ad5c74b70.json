{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.items = [];\n  }\n  // Add Product to cart is configured to append a product\n  // to an array of items\n  addToCart(product) {\n    this.items.push(product);\n  }\n  // GetItems is configured to collects the item users add\n  // to the cart and returns each item with associated quantity\n  getItems() {\n    return this.items;\n  }\n  // CleartCart() method returns an empty array of items,\n  // which empties the cart\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHd,UAAK,GAAc,EAAE;EAIjB;EAEJ;EACA;EACAC,SAAS,CAACC,OAAgB;IACxB,IAAI,CAACC,KAAK,CAACC,IAAI,CAACF,OAAO,CAAC;EAC1B;EAEA;EACA;EACAG,QAAQ;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EAEA;EACA;EACAG,SAAS;IACP,IAAI,CAACH,KAAK,GAAG,EAAE;IACf,OAAO,IAAI,CAACA,KAAK;EACnB;;AAxBWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFV;AAAM","names":["CartService","constructor","http","addToCart","product","items","push","getItems","clearCart","factory","providedIn"],"sourceRoot":"","sources":["E:\\OBJIS\\angular\\my-store\\angular-mystore\\src\\app\\cart.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Product } from './products';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  items: Product[] = [];\n  \n  constructor(\n    private http: HttpClient\n  ) { }\n\n  // Add Product to cart is configured to append a product\n  // to an array of items\n  addToCart(product: Product){\n    this.items.push(product);\n  }\n\n  // GetItems is configured to collects the item users add\n  // to the cart and returns each item with associated quantity\n  getItems(){\n    return this.items;\n  }\n\n  // CleartCart() method returns an empty array of items,\n  // which empties the cart\n  clearCart(){\n    this.items = [];\n    return this.items;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}